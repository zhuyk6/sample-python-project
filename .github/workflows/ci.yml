name: CI

on: [push, pull_request]

jobs:

  ruff:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Install ruff and ruff check
        uses: astral-sh/ruff-action@9828f49eb4cadf267b40eaa330295c412c68c1f9

      - name: Format code
        run: |
          ruff check . --select I --fix
          ruff format
      
      - name: Commit changes
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add .
          git commit -m 'ðŸŒˆ style: format code with ruff' || echo "No changes to commit"
      
      - name: Push changes
        uses: ad-m/github-push-action@77c5b412c50b723d2a4fbc6d71fb5723bcd439aa
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}


  pytest:
    runs-on: ubuntu-latest
    needs: ruff
    permissions:
      contents: read
      statuses: write
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
    
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      
      - name: Install dependencies
        run: uv sync --all-extras --dev --index pypi=https://pypi.org/simple
      
      - name: Run tests
        run: uv run pytest
    
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: cov.xml
          compression-level: 9
  
  generate-coverage-badge:
    runs-on: ubuntu-latest
    needs: pytest
    permissions:
        contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      
      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
      - name: Display structure of downloaded files
        run: ls -R
    
      - name: Generate coverage badge
        run: |
          uv tool install genbadge[coverage]
          uv run genbadge coverage -i cov.xml -o assets/coverage-badge.svg
      
      - name: Commit coverage badge
        run: |
          git pull origin ${{ github.ref }}
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add assets/coverage-badge.svg
          git commit -m "ðŸ“Š coverage: update coverage badge" || echo "No changes to commit"
      
      - name: Push coverage badge
        uses: ad-m/github-push-action@77c5b412c50b723d2a4fbc6d71fb5723bcd439aa
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

  docs:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: pytest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
    
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      
      - name: Install dependencies
        run: uv sync --all-extras --dev --index pypi=https://pypi.org/simple
      
      - name: Build documentation
        run: uv run pdoc --math --mermaid --docformat google src -o docs/

      - uses: actions/upload-pages-artifact@v3
        with:
          path: docs/

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: docs
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
